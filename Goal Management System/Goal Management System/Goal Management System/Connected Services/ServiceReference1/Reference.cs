//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Goal_Management_System.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Goal_Management_System___WCF")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Users", Namespace="http://schemas.datacontract.org/2004/07/Goal_Management_System___WCF")]
    [System.SerializableAttribute()]
    public partial class Users : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Goal_Management_System.ServiceReference1.Roles[] RoleListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Goal_Management_System.ServiceReference1.Roles[] RoleList {
            get {
                return this.RoleListField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleListField, value) != true)) {
                    this.RoleListField = value;
                    this.RaisePropertyChanged("RoleList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Roles", Namespace="http://schemas.datacontract.org/2004/07/Goal_Management_System___WCF")]
    [System.SerializableAttribute()]
    public partial class Roles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Goal_Management_System.ServiceReference1.Goals[] GoalListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Goal_Management_System.ServiceReference1.Goals[] GoalList {
            get {
                return this.GoalListField;
            }
            set {
                if ((object.ReferenceEquals(this.GoalListField, value) != true)) {
                    this.GoalListField = value;
                    this.RaisePropertyChanged("GoalList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleType {
            get {
                return this.RoleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTypeField, value) != true)) {
                    this.RoleTypeField = value;
                    this.RaisePropertyChanged("RoleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Goals", Namespace="http://schemas.datacontract.org/2004/07/Goal_Management_System___WCF")]
    [System.SerializableAttribute()]
    public partial class Goals : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Goal_Management_System.ServiceReference1.Tasks[] TaskListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoalName {
            get {
                return this.GoalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoalNameField, value) != true)) {
                    this.GoalNameField = value;
                    this.RaisePropertyChanged("GoalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Goal_Management_System.ServiceReference1.Tasks[] TaskList {
            get {
                return this.TaskListField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskListField, value) != true)) {
                    this.TaskListField = value;
                    this.RaisePropertyChanged("TaskList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Tasks", Namespace="http://schemas.datacontract.org/2004/07/Goal_Management_System___WCF")]
    [System.SerializableAttribute()]
    public partial class Tasks : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TaskTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TaskTime {
            get {
                return this.TaskTimeField;
            }
            set {
                if ((this.TaskTimeField.Equals(value) != true)) {
                    this.TaskTimeField = value;
                    this.RaisePropertyChanged("TaskTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Goal_Management_System.ServiceReference1.CompositeType GetDataUsingDataContract(Goal_Management_System.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Goal_Management_System.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(Goal_Management_System.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUsers", ReplyAction="http://tempuri.org/IService1/addUsersResponse")]
        void addUsers(Goal_Management_System.ServiceReference1.Users u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUsers", ReplyAction="http://tempuri.org/IService1/addUsersResponse")]
        System.Threading.Tasks.Task addUsersAsync(Goal_Management_System.ServiceReference1.Users u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCount", ReplyAction="http://tempuri.org/IService1/getCountResponse")]
        int getCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCount", ReplyAction="http://tempuri.org/IService1/getCountResponse")]
        System.Threading.Tasks.Task<int> getCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserName", ReplyAction="http://tempuri.org/IService1/getUserNameResponse")]
        string getUserName(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserName", ReplyAction="http://tempuri.org/IService1/getUserNameResponse")]
        System.Threading.Tasks.Task<string> getUserNameAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPassword", ReplyAction="http://tempuri.org/IService1/getPasswordResponse")]
        string getPassword(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getPassword", ReplyAction="http://tempuri.org/IService1/getPasswordResponse")]
        System.Threading.Tasks.Task<string> getPasswordAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addRole", ReplyAction="http://tempuri.org/IService1/addRoleResponse")]
        void addRole(int index, Goal_Management_System.ServiceReference1.Roles r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addRole", ReplyAction="http://tempuri.org/IService1/addRoleResponse")]
        System.Threading.Tasks.Task addRoleAsync(int index, Goal_Management_System.ServiceReference1.Roles r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteRole", ReplyAction="http://tempuri.org/IService1/deleteRoleResponse")]
        void deleteRole(int ui, int ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteRole", ReplyAction="http://tempuri.org/IService1/deleteRoleResponse")]
        System.Threading.Tasks.Task deleteRoleAsync(int ui, int ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRoleName", ReplyAction="http://tempuri.org/IService1/getRoleNameResponse")]
        string getRoleName(int ui, int ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRoleName", ReplyAction="http://tempuri.org/IService1/getRoleNameResponse")]
        System.Threading.Tasks.Task<string> getRoleNameAsync(int ui, int ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRoleType", ReplyAction="http://tempuri.org/IService1/getRoleTypeResponse")]
        string getRoleType(int ui, int ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRoleType", ReplyAction="http://tempuri.org/IService1/getRoleTypeResponse")]
        System.Threading.Tasks.Task<string> getRoleTypeAsync(int ui, int ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRoleCount", ReplyAction="http://tempuri.org/IService1/getRoleCountResponse")]
        int getRoleCount(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRoleCount", ReplyAction="http://tempuri.org/IService1/getRoleCountResponse")]
        System.Threading.Tasks.Task<int> getRoleCountAsync(int index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addGoal", ReplyAction="http://tempuri.org/IService1/addGoalResponse")]
        void addGoal(int ui, int ri, string goalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addGoal", ReplyAction="http://tempuri.org/IService1/addGoalResponse")]
        System.Threading.Tasks.Task addGoalAsync(int ui, int ri, string goalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteGoal", ReplyAction="http://tempuri.org/IService1/deleteGoalResponse")]
        void deleteGoal(int ui, int ri, int gi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteGoal", ReplyAction="http://tempuri.org/IService1/deleteGoalResponse")]
        System.Threading.Tasks.Task deleteGoalAsync(int ui, int ri, int gi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGoalName", ReplyAction="http://tempuri.org/IService1/getGoalNameResponse")]
        string getGoalName(int ui, int ri, int gi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGoalName", ReplyAction="http://tempuri.org/IService1/getGoalNameResponse")]
        System.Threading.Tasks.Task<string> getGoalNameAsync(int ui, int ri, int gi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGoalCount", ReplyAction="http://tempuri.org/IService1/getGoalCountResponse")]
        int getGoalCount(int ui, int ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getGoalCount", ReplyAction="http://tempuri.org/IService1/getGoalCountResponse")]
        System.Threading.Tasks.Task<int> getGoalCountAsync(int ui, int ri);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addTask", ReplyAction="http://tempuri.org/IService1/addTaskResponse")]
        void addTask(int ui, int ri, int gi, Goal_Management_System.ServiceReference1.Tasks t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addTask", ReplyAction="http://tempuri.org/IService1/addTaskResponse")]
        System.Threading.Tasks.Task addTaskAsync(int ui, int ri, int gi, Goal_Management_System.ServiceReference1.Tasks t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteTask", ReplyAction="http://tempuri.org/IService1/deleteTaskResponse")]
        void deleteTask(int ui, int ri, int gi, int ti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteTask", ReplyAction="http://tempuri.org/IService1/deleteTaskResponse")]
        System.Threading.Tasks.Task deleteTaskAsync(int ui, int ri, int gi, int ti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTasksCount", ReplyAction="http://tempuri.org/IService1/getTasksCountResponse")]
        int getTasksCount(int ui, int ri, int gi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTasksCount", ReplyAction="http://tempuri.org/IService1/getTasksCountResponse")]
        System.Threading.Tasks.Task<int> getTasksCountAsync(int ui, int ri, int gi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTaskName", ReplyAction="http://tempuri.org/IService1/getTaskNameResponse")]
        string getTaskName(int ui, int ri, int gi, int ti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTaskName", ReplyAction="http://tempuri.org/IService1/getTaskNameResponse")]
        System.Threading.Tasks.Task<string> getTaskNameAsync(int ui, int ri, int gi, int ti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTaskDate", ReplyAction="http://tempuri.org/IService1/getTaskDateResponse")]
        System.DateTime getTaskDate(int ui, int ri, int gi, int ti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getTaskDate", ReplyAction="http://tempuri.org/IService1/getTaskDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> getTaskDateAsync(int ui, int ri, int gi, int ti);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Goal_Management_System.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Goal_Management_System.ServiceReference1.IService1>, Goal_Management_System.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Goal_Management_System.ServiceReference1.CompositeType GetDataUsingDataContract(Goal_Management_System.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Goal_Management_System.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(Goal_Management_System.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public void addUsers(Goal_Management_System.ServiceReference1.Users u) {
            base.Channel.addUsers(u);
        }
        
        public System.Threading.Tasks.Task addUsersAsync(Goal_Management_System.ServiceReference1.Users u) {
            return base.Channel.addUsersAsync(u);
        }
        
        public int getCount() {
            return base.Channel.getCount();
        }
        
        public System.Threading.Tasks.Task<int> getCountAsync() {
            return base.Channel.getCountAsync();
        }
        
        public string getUserName(int i) {
            return base.Channel.getUserName(i);
        }
        
        public System.Threading.Tasks.Task<string> getUserNameAsync(int i) {
            return base.Channel.getUserNameAsync(i);
        }
        
        public string getPassword(int i) {
            return base.Channel.getPassword(i);
        }
        
        public System.Threading.Tasks.Task<string> getPasswordAsync(int i) {
            return base.Channel.getPasswordAsync(i);
        }
        
        public void addRole(int index, Goal_Management_System.ServiceReference1.Roles r) {
            base.Channel.addRole(index, r);
        }
        
        public System.Threading.Tasks.Task addRoleAsync(int index, Goal_Management_System.ServiceReference1.Roles r) {
            return base.Channel.addRoleAsync(index, r);
        }
        
        public void deleteRole(int ui, int ri) {
            base.Channel.deleteRole(ui, ri);
        }
        
        public System.Threading.Tasks.Task deleteRoleAsync(int ui, int ri) {
            return base.Channel.deleteRoleAsync(ui, ri);
        }
        
        public string getRoleName(int ui, int ri) {
            return base.Channel.getRoleName(ui, ri);
        }
        
        public System.Threading.Tasks.Task<string> getRoleNameAsync(int ui, int ri) {
            return base.Channel.getRoleNameAsync(ui, ri);
        }
        
        public string getRoleType(int ui, int ri) {
            return base.Channel.getRoleType(ui, ri);
        }
        
        public System.Threading.Tasks.Task<string> getRoleTypeAsync(int ui, int ri) {
            return base.Channel.getRoleTypeAsync(ui, ri);
        }
        
        public int getRoleCount(int index) {
            return base.Channel.getRoleCount(index);
        }
        
        public System.Threading.Tasks.Task<int> getRoleCountAsync(int index) {
            return base.Channel.getRoleCountAsync(index);
        }
        
        public void addGoal(int ui, int ri, string goalName) {
            base.Channel.addGoal(ui, ri, goalName);
        }
        
        public System.Threading.Tasks.Task addGoalAsync(int ui, int ri, string goalName) {
            return base.Channel.addGoalAsync(ui, ri, goalName);
        }
        
        public void deleteGoal(int ui, int ri, int gi) {
            base.Channel.deleteGoal(ui, ri, gi);
        }
        
        public System.Threading.Tasks.Task deleteGoalAsync(int ui, int ri, int gi) {
            return base.Channel.deleteGoalAsync(ui, ri, gi);
        }
        
        public string getGoalName(int ui, int ri, int gi) {
            return base.Channel.getGoalName(ui, ri, gi);
        }
        
        public System.Threading.Tasks.Task<string> getGoalNameAsync(int ui, int ri, int gi) {
            return base.Channel.getGoalNameAsync(ui, ri, gi);
        }
        
        public int getGoalCount(int ui, int ri) {
            return base.Channel.getGoalCount(ui, ri);
        }
        
        public System.Threading.Tasks.Task<int> getGoalCountAsync(int ui, int ri) {
            return base.Channel.getGoalCountAsync(ui, ri);
        }
        
        public void addTask(int ui, int ri, int gi, Goal_Management_System.ServiceReference1.Tasks t) {
            base.Channel.addTask(ui, ri, gi, t);
        }
        
        public System.Threading.Tasks.Task addTaskAsync(int ui, int ri, int gi, Goal_Management_System.ServiceReference1.Tasks t) {
            return base.Channel.addTaskAsync(ui, ri, gi, t);
        }
        
        public void deleteTask(int ui, int ri, int gi, int ti) {
            base.Channel.deleteTask(ui, ri, gi, ti);
        }
        
        public System.Threading.Tasks.Task deleteTaskAsync(int ui, int ri, int gi, int ti) {
            return base.Channel.deleteTaskAsync(ui, ri, gi, ti);
        }
        
        public int getTasksCount(int ui, int ri, int gi) {
            return base.Channel.getTasksCount(ui, ri, gi);
        }
        
        public System.Threading.Tasks.Task<int> getTasksCountAsync(int ui, int ri, int gi) {
            return base.Channel.getTasksCountAsync(ui, ri, gi);
        }
        
        public string getTaskName(int ui, int ri, int gi, int ti) {
            return base.Channel.getTaskName(ui, ri, gi, ti);
        }
        
        public System.Threading.Tasks.Task<string> getTaskNameAsync(int ui, int ri, int gi, int ti) {
            return base.Channel.getTaskNameAsync(ui, ri, gi, ti);
        }
        
        public System.DateTime getTaskDate(int ui, int ri, int gi, int ti) {
            return base.Channel.getTaskDate(ui, ri, gi, ti);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> getTaskDateAsync(int ui, int ri, int gi, int ti) {
            return base.Channel.getTaskDateAsync(ui, ri, gi, ti);
        }
    }
}
